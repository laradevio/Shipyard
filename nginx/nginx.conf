user www-data;
worker_processes 4;
pid /run/nginx.pid;
daemon off;

events {
	worker_connections  2048;
	multi_accept on;
	use epoll;
}

http {
	server_tokens off;
	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 15;
	types_hash_max_size 2048;
	client_max_body_size 20M;
	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	access_log /dev/stdout; # Access Log to the Docker Logger
	error_log /dev/stderr; # Error Log to the Docker Logger

	gzip on;
	gzip_disable "msie6";

	open_file_cache off; # Disables any file cache in a constant development environment.
	
	# certs sent to the client
    ssl_certificate		/etc/ssl/certs/shipyard-server-cert.pem;
    ssl_certificate_key /etc/ssl/certs/shipyard-server-key.pem;
	ssl_dhparam			/etc/ssl/dhparam.pem;
	
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;

	# Only accept modern browsers
	ssl_protocols TLSv1.2;
	ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
	ssl_ecdh_curve secp384r1; 
	ssl_prefer_server_ciphers on;

	# HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
	add_header Strict-Transport-Security "max-age=15768000; includeSubdomains; preload";
    add_header X-Frame-Options SAMEORIGIN;
    add_header X-Content-Type-Options nosniff;
	add_header X-XSS-Protection "1; mode=block";
	
	# OCSP Stapling ---
    # fetch OCSP records from URL in ssl_certificate and cache them
    # ssl_stapling on;
    # ssl_stapling_verify on;

	## verify chain of trust of OCSP response using Root CA and Intermediate certs
    # ssl_trusted_certificate /etc/ssl/certs/shipyard-ca-cert.pem;

	include /etc/nginx/conf.d/*.conf; # Don't include the default server
	include /etc/nginx/sites-available/*.conf; # User our Sites Configuration

	charset UTF-8;


}


