#
#--------------------------------------------------------------------------
# Laravel Server
#--------------------------------------------------------------------------
#
# Here we serve our Laravel application under `/var/www/public/`, as this
# NGINX Container binds your app directly to the `www` directory. The
# only thing left is to set the location and that's all the work.

server {

	listen $ENV{"NGINX_HTTPS_PORT"} ssl http2;
	listen [::]:$ENV{"NGINX_HTTPS_PORT"} ssl http2;

    server_name $ENV{"SERVER_NAME"};
    root /var/www/public;
    index index.php index.html index.htm;

    location / {
         try_files $uri $uri/ /index.php$is_args$args;
    }

    location ~ \.php$ {
        try_files $uri /index.php =404;	
		
		# We don't need to put the specific container name or IP; only
		# the service name of our docker-compose.yml file.
		fastcgi_pass php:9000;
		
        fastcgi_index index.php;
        fastcgi_buffers 16 16k;
        fastcgi_buffer_size 32k;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
    }

    location ~ /\.ht {
        deny all;
    }

}

#
#--------------------------------------------------------------------------
# xDebug Enabled 
#--------------------------------------------------------------------------
#
# In this part we just copy the same SERVER block previusly stated, with
# the difference in pointing out to our xDebug Container through the
# other ports. That way we maintain parity with our original URL.

server {

    listen $ENV{"NGINX_XDEBUG_HTTPS_PORT"} ssl http2;
    listen [::]:$ENV{"NGINX_XDEBUG_HTTPS_PORT"} ssl http2;

    server_name $ENV{"SERVER_NAME"};
    root /var/www/public;
    index index.php index.html index.htm;
    resolver $ENV{"RESOLVER_SERVER"};

    location / {
         try_files $uri $uri/ /index.php$is_args$args;
    }

    location ~ \.php$ {
        try_files $uri /index.php =404;	
		
	# We need this "set" trick to let NGINX start if the Xdebug
	# Container hasn't started yet, because it resolves the
	# Host at startup, which can lead to an early crash.
	set $upstream xdebug:9000;
	fastcgi_pass $upstream;
		
        fastcgi_index index.php;
        fastcgi_buffers 16 16k;
        fastcgi_buffer_size 32k;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
    }

    location ~ /\.ht {
        deny all;
    }

}
